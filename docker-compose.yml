services:
  postgres:
    image: postgres:17-alpine
    container_name: psgr
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend

  project:
    build:
      context: ./project
      dockerfile: Dockerfile
    image: project
    container_name: project
    command: >
      sh -c "python manage.py collectstatic --noinput \
      && python manage.py migrate \
      && python manage.py loaddata carwash/fixtures/services.json \
      && daphne -b 0.0.0.0 -p 8000 aquamarine.asgi:application"
    networks:
      - backend
    volumes:
      - static:/app/static
    links:
      - "postgres:dbps"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  nginx:
    build: ./nginx
    container_name: nginx-server
    restart: always
    networks:
      - backend
    expose:
      - 8088
    volumes:
      - static:/app/static
    ports:
      - "80:8088"
    depends_on:
      - project

  redis:
    image: redis:latest
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
  static:
